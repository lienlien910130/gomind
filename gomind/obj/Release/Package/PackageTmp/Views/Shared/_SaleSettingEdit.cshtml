@model gomind.Models.SaleSetting



<div class="table-responsive">
@using (Ajax.BeginForm("Edit", "SaleSettings", new AjaxOptions { UpdateTargetId = "returns", InsertionMode = InsertionMode.Replace, HttpMethod = "Post" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)
            <table id="mytable" class="table table-bordred table-striped text-center" style="font-family:'Microsoft JhengHei UI','Microsoft JhengHei';font-size:x-large">
                <thead>
                <th class="col-lg-4 text-center"><strong>開放</strong></th>
                <th class="col-lg-4 text-center"><strong>付款方式</strong></th>
                <th class="col-lg-4 text-center"><strong>運費</strong></th>
                </thead>
                <tbody>
                  
                    <tr class="text-center">
                        <td>
                            <div class="form-group">
                                <div class="text-center">
                                    @Html.ValidationMessageFor(model => model.SendFace, "", new { @class = "text-danger" })
                                    @Html.EditorFor(model => model.SendFace, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                        </td>
                        <td>
                            @Html.LabelFor(model => model.SendFace, htmlAttributes: new { @class = "control-label " })
                        </td>
                        <td></td>
                    </tr>
                    <tr class="text-center">
                        <td>
                            <div class="form-group">
                                <div class="text-center">
                                    @Html.EditorFor(model => model.SendHome, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SendHome, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            @Html.LabelFor(model => model.SendHome, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.HomeMoney, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HomeMoney, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr class="text-center">
                        <td>
                            <div class="form-group">
                                <div class="text-center">
                                    @Html.EditorFor(model => model.SendSeven, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SendSeven, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            @Html.LabelFor(model => model.SendSeven, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.SevenMoney, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SevenMoney, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr class="text-center">
                        <td>
                            <div class="form-group">
                                <div class="text-center">
                                    @Html.EditorFor(model => model.SendFamily, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SendFamily, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            @Html.LabelFor(model => model.SendFamily, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.FamilMoney, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FamilMoney, "", new { @class = "text-danger" })
                        </td>
                    </tr>
                    <tr class="text-center">
                        <td>
                            <div class="form-group">
                                <div class="text-center">
                                    @Html.EditorFor(model => model.SendPost, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SendPost, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </td>
                        <td>
                            @Html.LabelFor(model => model.SendPost, htmlAttributes: new { @class = "control-label" })
                        </td>
                        <td>
                            @Html.EditorFor(model => model.PostMoney, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostMoney, "", new { @class = "text-danger" })
                        </td>
                    </tr>

                </tbody>
            </table>
            <br />
            <p class="text-danger" style="font-family:'Microsoft JhengHei UI','Microsoft JhengHei';font-size:larger">*此處更動將會影響到所有商品的運費及付款設定</p>
<br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="儲存" class="btn btn-default" />
                </div>
            </div>
            }
        @using (Ajax.BeginForm("EditCancel", "SaleSettings", new AjaxOptions { UpdateTargetId = "returns", InsertionMode = InsertionMode.Replace, HttpMethod = "Post" }))
            {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="取消" class="btn btn-default" />
                </div>
            </div>
        }

        </div>


  @*@using (Ajax.BeginForm("Edit", "SaleSettings", new AjaxOptions { UpdateTargetId = "returns", InsertionMode = InsertionMode.Replace, HttpMethod = "Post" }))
  {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <table class="table text-center">
        <tr>
            <th class="col-lg-4 text-center"><h3>開放</h3></th>
            <th class="col-lg-4 text-center"><h3>付款方式</h3></th>
            <th class="col-lg-4 text-center"><h3>運費</h3></th>

        </tr>

        <tr>
            <td>
                <div class="form-group">
                    <div class="col-md-4 text-center">
                        @Html.EditorFor(model => model.SendATM, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SendATM, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.SendATM, htmlAttributes: new { @class = "control-label " })
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    <div class="col-md-4 text-center">
                        @Html.ValidationMessageFor(model => model.SendFace, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.SendFace, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.SendFace, htmlAttributes: new { @class = "control-label " })
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    <div class="col-md-4 text-center">
                        @Html.EditorFor(model => model.SendHome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SendHome, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.SendHome, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.HomeMoney, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HomeMoney, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    <div class="col-md-4 text-center">
                        @Html.EditorFor(model => model.SendSeven, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SendSeven, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.SendSeven, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.SevenMoney, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SevenMoney, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    <div class="col-md-4 text-center">
                        @Html.EditorFor(model => model.SendFamily, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SendFamily, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.SendFamily, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.FamilMoney, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FamilMoney, "", new { @class = "text-danger" })
            </td>
        </tr>
        <tr>
            <td>
                <div class="form-group">
                    <div class="col-md-4 text-center">
                        @Html.EditorFor(model => model.SendPost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SendPost, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                @Html.LabelFor(model => model.SendPost, htmlAttributes: new { @class = "control-label" })
            </td>
            <td>
                @Html.EditorFor(model => model.PostMoney, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostMoney, "", new { @class = "text-danger" })
            </td>
        </tr>



    </table>
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="儲存" class="btn btn-default" />
    </div>
</div>

  }
@using (Ajax.BeginForm("EditCancel", "SaleSettings", new AjaxOptions { UpdateTargetId = "returns", InsertionMode = InsertionMode.Replace, HttpMethod = "Post" }))
            {
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="取消" class="btn btn-default" />
        </div>
    </div>
}*@
